/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>
#include <expmod>

#define PLUGIN "ExpMod Top15" //thx czlowkiekowi z amxx.pl
#define VERSION "1.0"
#define AUTHOR "tomcionek15 & grs4"


public plugin_init() {
	register_plugin(PLUGIN, VERSION, AUTHOR)
	register_clcmd("say /top", "top15")
}
public top15(id)
{
	static sort[33][2];
	new nick[33]//, dane[33]
	new players[32], num, count, index;
	get_players(players, num);
	//new liczba;
	for(new i = 0; i < num; i++)
	{
		index = players[i];
		if(is_user_hltv(index) || !is_user_connected(index))
			continue;
		sort[count][0] = index;
		//get_user_name(index, nick, 32);
		//WczytajDane("ExpMod_top15", nick, dane, 32)
		//liczba = str_to_num(dane)
		sort[count][1] = exp_get_user_level(index);
		count++;
	}
	
	new motd[1501], Len;
	SortCustom2D(sort,count,"sortuj");
	Len = formatex(motd, sizeof motd - 1,"<body bgcolor=#000000><font color=blue><pre>");
	Len += formatex(motd[Len], (sizeof motd - 1) - Len,"%s %-32.32s %-10.9s %s^n", "#", "Nick", "# Poziom", "# Exp");
    
	new do_ilu = clamp(count, 0, 15);
	new id2;
	for(new i = 0; i < do_ilu; i++)
	{
		id2 = sort[i][0];
		get_user_name(id2, nick, 32);
		if(i+1 < 10)
		{
			if(i+1 == 1)
			{
				if(exp_is_user_vip(id2))
				{
					Len += formatex(motd[Len], (sizeof motd - 1) - Len,"<font color=gold>%d %-32.32s %-10.10d %-8.10d <font color=red>%s^n", i + 1, nick, sort[i][1], exp_get_user_exp(id2), "[VIP]");
				}
				else
				{
					Len += formatex(motd[Len], (sizeof motd - 1) - Len,"<font color=gold>%d %-32.32s %-10.10d %d^n", i + 1, nick, sort[i][1], exp_get_user_exp(id2));
				}
			}
			if(i+1 == 2)
			{
				if(exp_is_user_vip(id2))
				{
					Len += formatex(motd[Len], (sizeof motd - 1) - Len,"<font color=silver>%d %-32.32s %-10.10d %-8.10d <font color=red>%s^n", i + 1, nick, sort[i][1], exp_get_user_exp(id2), "[VIP]");
				}
				else
				{
					Len += formatex(motd[Len], (sizeof motd - 1) - Len,"<font color=silver>%d %-32.32s %-10.10d %d^n", i + 1, nick, sort[i][1], exp_get_user_exp(id2));
				}
			}
			if(i+1 == 3)
			{
				if(exp_is_user_vip(id2))
				{
					Len += formatex(motd[Len], (sizeof motd - 1) - Len,"<font color=brown>%d %-32.32s %-10.10d %-8.10d <font color=red>%s^n", i + 1, nick, sort[i][1], exp_get_user_exp(id2), "[VIP]");
				}
				else
				{
					Len += formatex(motd[Len], (sizeof motd - 1) - Len,"<font color=brown>%d %-32.32s %-10.10d %d^n", i + 1, nick, sort[i][1], exp_get_user_exp(id2));
				}
			}
			if(i+1 != 1 && i+1 != 2 && i+1 != 3)
			{
				if(exp_is_user_vip(id2))
				{
					Len += formatex(motd[Len], (sizeof motd - 1) - Len,"<font color=gree>%d %-32.32s %-10.10d %-8.10d <font color=red>%s^n", i + 1, nick, sort[i][1], exp_get_user_exp(id2), "[VIP]");
				}
				else
				{
					Len += formatex(motd[Len], (sizeof motd - 1) - Len,"<font color=gree>%d %-32.32s %-10.10d %d^n", i + 1, nick, sort[i][1], exp_get_user_exp(id2));
				}
			}
		}
		else
		{
			if(i+1 > 15)
			{
				if(exp_is_user_vip(id2))
				{
					Len += formatex(motd[Len], (sizeof motd - 1) - Len,"<font color=purple>%d %-31.31s %-10.9d %-8.7d <font color=red>%s^n", i + 1, nick, sort[i][1], exp_get_user_exp(id2), "[VIP]");
				}
				else
				{
				Len += formatex(motd[Len], (sizeof motd - 1) - Len,"<font color=purple>%d %-31.31s %-10.9d %d^n", i + 1, nick, sort[i][1], exp_get_user_exp(id2));
				}
			}
			else
			{
				if(exp_is_user_vip(id2))
				{
					Len += formatex(motd[Len], (sizeof motd - 1) - Len,"<font color=gree>%d %-31.31s %-10.9d %-8.7d <font color=red>%s^n", i + 1, nick, sort[i][1], exp_get_user_exp(id2), "[VIP]");
				}
				else
				{
				Len += formatex(motd[Len], (sizeof motd - 1) - Len,"<font color=gree>%d %-31.31s %-10.9d %d^n", i + 1, nick, sort[i][1], exp_get_user_exp(id2));
				}
			}
		}
	}
	Len += formatex(motd[Len], (sizeof motd - 1) - Len, "^n^n<font color=red>Lista najlepszych graczy aktualnie na serwerze")
	Len += formatex(motd[Len], (sizeof motd - 1) - Len,"</body></font></pre>");
	
	show_motd(id, motd, "Top Wszystkich graczy");
}

public sortuj(elem1[], elem2[])
{
	if(elem1[1] > elem2[1])
		return -1;
	else if(elem1[1] < elem2[1])
		return 1;
    
	return 0;
} 
