/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <fun>
#include <cstrike>
#include <hamsandwich>
#include <fakemeta>
#include <cvar_util>
#include <csx>

#define PLUGIN "ExpMod"
#define VERSION "2.0"
#define AUTHOR "GT Team"

#define MAX_PLAYER 32

new giExpTable[] = { 100, 200, 300, 500, 800, 1300, 2100 }


new gszCvarFile[] = "addons/amxmodx/configs/exp_cvars.cfg"
new gszConfigFile[] = "addons/amxmodx/configs/exp_config.cfg";
new gszLogFile[] = "ExpMod_2.log";

new g_szPrefix[] = "[EXPMOD]"
enum e_PlayerInfo {
	PLAYER_NICK[33],
	PLAYER_LEVEL,
	PLAYER_EXP
}

enum e_CvarInfo {
	CVAR_KILL,
	CVAR_KILL_HS,
	CVAR_PLANT_BOMB,
	CVAR_DEFUSE_BOMB
}

enum e_CvarValue {
	KILL,
	KILL_HS,
	PLANT_BOMB,
	DEFUSE_BOMB
}
enum e_TaskNum {
	TASK_HUD = 217
}

new g_Player[MAX_PLAYER+1][e_PlayerInfo]

new g_CvarPointer[e_CvarInfo];
new g_CvarValue[e_CvarValue];

new g_Task[e_TaskNum]

public plugin_init() {
	register_plugin(PLUGIN, VERSION, AUTHOR)
	
	register_event("DeathMsg", "event_DeathMsg", "a")
	
	RegisterHam(Ham_Spawn, "player", "PlayerSpawn", 1)
	
	RegisterCvars()
	LoadConfig()
}

public RegisterCvars() { 
	
	g_CvarPointer[CVAR_KILL] = 		CvarRegister("exp_kill", 	"60", _, _, true, 1.0, false, _, true);
	g_CvarPointer[CVAR_KILL_HS] = 		CvarRegister("exp_kill_hs", 	"90", _, _, false, _, false, _, true);
	g_CvarPointer[CVAR_PLANT_BOMB] = 	CvarRegister("exp_plant_bomb", 	"115", _, _, false, _, false, _, true);
	g_CvarPointer[CVAR_DEFUSE_BOMB] = 	CvarRegister("exp_defuse_bomb", "115", _, _, false, _, false, _, true);
	
	for(new i; i < _:e_CvarInfo;i++) {
		CvarCache(g_CvarPointer[e_CvarInfo:i], CvarType_Int, g_CvarValue[e_CvarValue:i])
	}
	
}
public client_connect(id) {
	ResetPlayerInformation(id)
	
	get_user_name(id, g_Player[id][PLAYER_NICK], 32)
}

public client_disconnect(id) {
	ResetPlayerInformation(id);
}

public ResetPlayerInformation(id) {
	for(new i; i<_:e_PlayerInfo;i++) {
		g_Player[id][e_PlayerInfo:i] = 0
	}
	
	formatex(g_Player[id][PLAYER_NICK], 32, "");
}
public LoadConfig() {
	if(file_exists(gszCvarFile))
		server_cmd("exec %s",gszConfigFile)
	else
		log_to_file(gszLogFile, "%s Brak pliku konfiguracyjnego cvarow. Wczytywanie domyslnych wartosci", g_Prefix);
		
	if(file_exists(gszConfigFile)) {
		/* Wczytwyanie konfiguracji */
		
	} else 
		log_to_file(gszLogFile, "%s Brak pliku konfiguracyjnego silnika. Wczytywanie domyslnych wartosci", g_Prefix);
	
}

public checkLevel(id) {
	while(g_Player[id][PLAYER_EXP] >= get_level_exp(g_Player[id][PLAYER_LEVEL])) {
		g_Player[id][PLAYER_LEVEL] ++;
		client_print(id, 3, "%s Osiagnales poziom %d!", g_Prefix, g_Player[id][PLAYER_LEVEL]);
	}
}


public PlayerSpawn(id) {
	if(!is_user_alive(id))
		return HAM_IGNORED
		
	set_task(1.0, "showPlayerHud", id + g_Task[TASK_HUD])
	
	return HAM_IGNORED
}

public event_DeathMsg() {
	new iAttacker = read_data(1)
	new iVictim = read_data(2)
	new iHs = read_data(3)
	
	if(iAttacker != iVictim && ( get_user_team(iAttacker) != get_user_team(iVictim) )) {
		new iExp = iHs ? 100 : 60
		
		g_Player[iAttacker][PLAYER_EXP] += iExp
		
		set_hudmessage(0, 0, 255, -1.0, -1.0,_,_,0.4, _, 0.1, 2)
		show_hudmessage(iAttacker, "%d", iExp)		
		
		checkLevel(iAttacker)
	}
		
}

public showPlayerHud(id) {
	new iTask = id
	id-=g_Task[TASK_HUD]
	
	if(is_user_alive(id)) {
		set_hudmessage(62, 63, 142, 0.0, 0.18, 0, 0.1, 1.1)
		show_hudmessage(id, "Poziom: %d^nEXP: %d / %d (+ %d)", g_Player[id][PLAYER_LEVEL], g_Player[id][PLAYER_EXP], get_level_exp(g_Player[id][PLAYER_LEVEL]), ( get_level_exp(g_Player[id][PLAYER_LEVEL]) - g_Player[id][PLAYER_EXP]) )
	}
	else {
		new target = pev(id, pev_iuser2)
		
		set_hudmessage(228, 155, 28, 0.51, 0.61, 0, 0.1, 1.1)
		show_hudmessage(id, "Poziom: %d^nEXP: %d / %d (+ %d)", g_Player[target][PLAYER_LEVEL], g_Player[target][PLAYER_EXP], get_level_exp(g_Player[target][PLAYER_LEVEL]), ( get_level_exp(g_Player[target][PLAYER_LEVEL]) - g_Player[id][PLAYER_EXP] ) )
	}
	
	set_task(1.0, "showPlayerHud", iTask)
}
		
public bomb_planted(id) {
	if(is_user_alive(id)) {
		g_Player[id][PLAYER_EXP] += 100
		client_print(0,3, "%s +100 expa za podlozenie bomby!", g_szPrefix)
		
		checkLevel(id)
	}
}
public bomb_defused(id) {
	if(is_user_alive(id)) {
		g_Player[id][PLAYER_EXP] += 100
		client_print(0,3, "%s +100 expa za roybrojenie bomby!", g_szPrefix)
		
		checkLevel(id)
	}
}

public get_level_exp(iLevel) {
	return giExpTable[iLevel]
}
